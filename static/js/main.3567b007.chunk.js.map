{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","image","setImage","_useState3","_useState4","response","setResponse","fetchImageRequest","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","data","dataJSON","result","wrap","_context","prev","next","fetch","concat","sent","json","results","console","log","stop","apply","this","arguments","react_default","a","createElement","Fragment","align","type","placeholder","value","onChange","e","target","onClick","map","val","key","id","src","urls","small","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"g8MAGA,IAqDeA,EArDH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEgBN,mBAAS,IAFzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAECE,EAFDF,EAAA,GAMVG,EAAiB,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,IAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLC,MAAK,uDAAAC,OACiCpB,EADjC,sEADA,cAClBY,EADkBI,EAAAK,KAAAL,EAAAE,KAAA,EAIDN,EAAKU,OAJJ,OAIlBT,EAJkBG,EAAAK,KAKlBP,EAASD,EAASU,QACxBC,QAAQC,IAAIX,GACZT,EAAYS,GAPY,wBAAAE,EAAAU,SAAAf,MAAH,yBAAAJ,EAAAoB,MAAAC,KAAAC,YAAA,GAoBvB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UACLJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLC,YAAY,sBACZC,MAAOrC,EACPsC,SAAU,SAACC,GAAD,OAAOtC,EAASsC,EAAEC,OAAOH,UAErCP,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLM,QAnBI,WACdnC,IACAL,EAAS,IACTuB,QAAQC,IAAI,YAcJ,WAQNK,EAAAC,EAAAC,cAAA,WACG5B,EAASsC,IAAI,SAACC,GACb,OACEb,EAAAC,EAAAC,cAAA,OAAMY,IAAKD,EAAIE,GAAIC,IAAKH,EAAII,KAAKC,WAnBzC,MClBWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAb,EAAA,GAAAc,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAA9C,GAAiD,IAA9CgD,EAA8ChD,EAA9CgD,OAAQC,EAAsCjD,EAAtCiD,OAAQC,EAA8BlD,EAA9BkD,OAAQC,EAAsBnD,EAAtBmD,OAAQC,EAAcpD,EAAdoD,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,WAAP,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,QAOJjB","file":"static/js/main.3567b007.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState} from \"react\";\n\nconst App = () => {\n  const [image, setImage] = useState(\"\");\n  const [response, setResponse] = useState([]);\n\n\n//fetchImageRequest  function will get the images from the api and store those values in the response state  \n  const fetchImageRequest = async () => {\n    const data = await fetch(\n      `https://api.unsplash.com/search/photos?page=1&query=${image}&client_id=PNRP0FIbuNLJ51f9XpGQXUdoLUVKBHfIoSMTJfGu-_k&per_page=9`\n    );\n    const dataJSON = await data.json();\n    const result = dataJSON.results;\n    console.log(result);\n    setResponse(result);\n  };\n\n\n  //Once the submit button is clicked, Submit function will call the fetchImageRequest  function\n   const Submit = () => {\n    fetchImageRequest();\n    setImage(\"\");\n    console.log(\"search\");\n   \n  }\n\n\n  return (\n    <>\n      <div align=\"center\">\n            <input\n              type=\"text\"\n              placeholder=\"...Search Images...\"\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            />\n            <button\n              type=\"submit\"\n              onClick={Submit}\n            >\n              Search\n            </button>\n      </div>\n\n      <div>\n        {response.map((val) => {\n          return (\n            <img  key={val.id} src={val.urls.small}/>\n          );\n        })}\n      </div>;\n    </>\n  );\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}